
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Program` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Program
 * 
 */
export type ProgramModel = runtime.Types.Result.DefaultSelection<Prisma.$ProgramPayload>

export type AggregateProgram = {
  _count: ProgramCountAggregateOutputType | null
  _avg: ProgramAvgAggregateOutputType | null
  _sum: ProgramSumAggregateOutputType | null
  _min: ProgramMinAggregateOutputType | null
  _max: ProgramMaxAggregateOutputType | null
}

export type ProgramAvgAggregateOutputType = {
  targetAmount: runtime.Decimal | null
}

export type ProgramSumAggregateOutputType = {
  targetAmount: runtime.Decimal | null
}

export type ProgramMinAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  targetAmount: runtime.Decimal | null
  bannerImage: string | null
  category: string | null
  status: string | null
  programType: string | null
  contact: string | null
  details: string | null
  createdBy: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProgramMaxAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  targetAmount: runtime.Decimal | null
  bannerImage: string | null
  category: string | null
  status: string | null
  programType: string | null
  contact: string | null
  details: string | null
  createdBy: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProgramCountAggregateOutputType = {
  id: number
  title: number
  description: number
  targetAmount: number
  bannerImage: number
  category: number
  status: number
  programType: number
  contact: number
  details: number
  createdBy: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ProgramAvgAggregateInputType = {
  targetAmount?: true
}

export type ProgramSumAggregateInputType = {
  targetAmount?: true
}

export type ProgramMinAggregateInputType = {
  id?: true
  title?: true
  description?: true
  targetAmount?: true
  bannerImage?: true
  category?: true
  status?: true
  programType?: true
  contact?: true
  details?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
}

export type ProgramMaxAggregateInputType = {
  id?: true
  title?: true
  description?: true
  targetAmount?: true
  bannerImage?: true
  category?: true
  status?: true
  programType?: true
  contact?: true
  details?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
}

export type ProgramCountAggregateInputType = {
  id?: true
  title?: true
  description?: true
  targetAmount?: true
  bannerImage?: true
  category?: true
  status?: true
  programType?: true
  contact?: true
  details?: true
  createdBy?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ProgramAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Program to aggregate.
   */
  where?: Prisma.ProgramWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Programs to fetch.
   */
  orderBy?: Prisma.ProgramOrderByWithRelationInput | Prisma.ProgramOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProgramWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Programs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Programs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Programs
  **/
  _count?: true | ProgramCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ProgramAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ProgramSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProgramMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProgramMaxAggregateInputType
}

export type GetProgramAggregateType<T extends ProgramAggregateArgs> = {
      [P in keyof T & keyof AggregateProgram]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProgram[P]>
    : Prisma.GetScalarType<T[P], AggregateProgram[P]>
}




export type ProgramGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramWhereInput
  orderBy?: Prisma.ProgramOrderByWithAggregationInput | Prisma.ProgramOrderByWithAggregationInput[]
  by: Prisma.ProgramScalarFieldEnum[] | Prisma.ProgramScalarFieldEnum
  having?: Prisma.ProgramScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProgramCountAggregateInputType | true
  _avg?: ProgramAvgAggregateInputType
  _sum?: ProgramSumAggregateInputType
  _min?: ProgramMinAggregateInputType
  _max?: ProgramMaxAggregateInputType
}

export type ProgramGroupByOutputType = {
  id: string
  title: string
  description: string
  targetAmount: runtime.Decimal
  bannerImage: string | null
  category: string | null
  status: string
  programType: string
  contact: string | null
  details: string | null
  createdBy: string
  createdAt: Date
  updatedAt: Date
  _count: ProgramCountAggregateOutputType | null
  _avg: ProgramAvgAggregateOutputType | null
  _sum: ProgramSumAggregateOutputType | null
  _min: ProgramMinAggregateOutputType | null
  _max: ProgramMaxAggregateOutputType | null
}

type GetProgramGroupByPayload<T extends ProgramGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProgramGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProgramGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProgramGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProgramGroupByOutputType[P]>
      }
    >
  >



export type ProgramWhereInput = {
  AND?: Prisma.ProgramWhereInput | Prisma.ProgramWhereInput[]
  OR?: Prisma.ProgramWhereInput[]
  NOT?: Prisma.ProgramWhereInput | Prisma.ProgramWhereInput[]
  id?: Prisma.StringFilter<"Program"> | string
  title?: Prisma.StringFilter<"Program"> | string
  description?: Prisma.StringFilter<"Program"> | string
  targetAmount?: Prisma.DecimalFilter<"Program"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.StringNullableFilter<"Program"> | string | null
  category?: Prisma.StringNullableFilter<"Program"> | string | null
  status?: Prisma.StringFilter<"Program"> | string
  programType?: Prisma.StringFilter<"Program"> | string
  contact?: Prisma.StringNullableFilter<"Program"> | string | null
  details?: Prisma.StringNullableFilter<"Program"> | string | null
  createdBy?: Prisma.StringFilter<"Program"> | string
  createdAt?: Prisma.DateTimeFilter<"Program"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Program"> | Date | string
  programPeriods?: Prisma.ProgramPeriodListRelationFilter
  donations?: Prisma.DonationListRelationFilter
}

export type ProgramOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  targetAmount?: Prisma.SortOrder
  bannerImage?: Prisma.SortOrderInput | Prisma.SortOrder
  category?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  programType?: Prisma.SortOrder
  contact?: Prisma.SortOrderInput | Prisma.SortOrder
  details?: Prisma.SortOrderInput | Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  programPeriods?: Prisma.ProgramPeriodOrderByRelationAggregateInput
  donations?: Prisma.DonationOrderByRelationAggregateInput
}

export type ProgramWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ProgramWhereInput | Prisma.ProgramWhereInput[]
  OR?: Prisma.ProgramWhereInput[]
  NOT?: Prisma.ProgramWhereInput | Prisma.ProgramWhereInput[]
  title?: Prisma.StringFilter<"Program"> | string
  description?: Prisma.StringFilter<"Program"> | string
  targetAmount?: Prisma.DecimalFilter<"Program"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.StringNullableFilter<"Program"> | string | null
  category?: Prisma.StringNullableFilter<"Program"> | string | null
  status?: Prisma.StringFilter<"Program"> | string
  programType?: Prisma.StringFilter<"Program"> | string
  contact?: Prisma.StringNullableFilter<"Program"> | string | null
  details?: Prisma.StringNullableFilter<"Program"> | string | null
  createdBy?: Prisma.StringFilter<"Program"> | string
  createdAt?: Prisma.DateTimeFilter<"Program"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Program"> | Date | string
  programPeriods?: Prisma.ProgramPeriodListRelationFilter
  donations?: Prisma.DonationListRelationFilter
}, "id">

export type ProgramOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  targetAmount?: Prisma.SortOrder
  bannerImage?: Prisma.SortOrderInput | Prisma.SortOrder
  category?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  programType?: Prisma.SortOrder
  contact?: Prisma.SortOrderInput | Prisma.SortOrder
  details?: Prisma.SortOrderInput | Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ProgramCountOrderByAggregateInput
  _avg?: Prisma.ProgramAvgOrderByAggregateInput
  _max?: Prisma.ProgramMaxOrderByAggregateInput
  _min?: Prisma.ProgramMinOrderByAggregateInput
  _sum?: Prisma.ProgramSumOrderByAggregateInput
}

export type ProgramScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProgramScalarWhereWithAggregatesInput | Prisma.ProgramScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProgramScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProgramScalarWhereWithAggregatesInput | Prisma.ProgramScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Program"> | string
  title?: Prisma.StringWithAggregatesFilter<"Program"> | string
  description?: Prisma.StringWithAggregatesFilter<"Program"> | string
  targetAmount?: Prisma.DecimalWithAggregatesFilter<"Program"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.StringNullableWithAggregatesFilter<"Program"> | string | null
  category?: Prisma.StringNullableWithAggregatesFilter<"Program"> | string | null
  status?: Prisma.StringWithAggregatesFilter<"Program"> | string
  programType?: Prisma.StringWithAggregatesFilter<"Program"> | string
  contact?: Prisma.StringNullableWithAggregatesFilter<"Program"> | string | null
  details?: Prisma.StringNullableWithAggregatesFilter<"Program"> | string | null
  createdBy?: Prisma.StringWithAggregatesFilter<"Program"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Program"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Program"> | Date | string
}

export type ProgramCreateInput = {
  id?: string
  title: string
  description: string
  targetAmount: runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: string | null
  category?: string | null
  status?: string
  programType?: string
  contact?: string | null
  details?: string | null
  createdBy: string
  createdAt?: Date | string
  updatedAt?: Date | string
  programPeriods?: Prisma.ProgramPeriodCreateNestedManyWithoutProgramInput
  donations?: Prisma.DonationCreateNestedManyWithoutProgramInput
}

export type ProgramUncheckedCreateInput = {
  id?: string
  title: string
  description: string
  targetAmount: runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: string | null
  category?: string | null
  status?: string
  programType?: string
  contact?: string | null
  details?: string | null
  createdBy: string
  createdAt?: Date | string
  updatedAt?: Date | string
  programPeriods?: Prisma.ProgramPeriodUncheckedCreateNestedManyWithoutProgramInput
  donations?: Prisma.DonationUncheckedCreateNestedManyWithoutProgramInput
}

export type ProgramUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  targetAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  programType?: Prisma.StringFieldUpdateOperationsInput | string
  contact?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  details?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programPeriods?: Prisma.ProgramPeriodUpdateManyWithoutProgramNestedInput
  donations?: Prisma.DonationUpdateManyWithoutProgramNestedInput
}

export type ProgramUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  targetAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  programType?: Prisma.StringFieldUpdateOperationsInput | string
  contact?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  details?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programPeriods?: Prisma.ProgramPeriodUncheckedUpdateManyWithoutProgramNestedInput
  donations?: Prisma.DonationUncheckedUpdateManyWithoutProgramNestedInput
}

export type ProgramCreateManyInput = {
  id?: string
  title: string
  description: string
  targetAmount: runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: string | null
  category?: string | null
  status?: string
  programType?: string
  contact?: string | null
  details?: string | null
  createdBy: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProgramUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  targetAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  programType?: Prisma.StringFieldUpdateOperationsInput | string
  contact?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  details?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProgramUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  targetAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  programType?: Prisma.StringFieldUpdateOperationsInput | string
  contact?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  details?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProgramScalarRelationFilter = {
  is?: Prisma.ProgramWhereInput
  isNot?: Prisma.ProgramWhereInput
}

export type ProgramCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  targetAmount?: Prisma.SortOrder
  bannerImage?: Prisma.SortOrder
  category?: Prisma.SortOrder
  status?: Prisma.SortOrder
  programType?: Prisma.SortOrder
  contact?: Prisma.SortOrder
  details?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProgramAvgOrderByAggregateInput = {
  targetAmount?: Prisma.SortOrder
}

export type ProgramMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  targetAmount?: Prisma.SortOrder
  bannerImage?: Prisma.SortOrder
  category?: Prisma.SortOrder
  status?: Prisma.SortOrder
  programType?: Prisma.SortOrder
  contact?: Prisma.SortOrder
  details?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProgramMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  targetAmount?: Prisma.SortOrder
  bannerImage?: Prisma.SortOrder
  category?: Prisma.SortOrder
  status?: Prisma.SortOrder
  programType?: Prisma.SortOrder
  contact?: Prisma.SortOrder
  details?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProgramSumOrderByAggregateInput = {
  targetAmount?: Prisma.SortOrder
}

export type ProgramCreateNestedOneWithoutDonationsInput = {
  create?: Prisma.XOR<Prisma.ProgramCreateWithoutDonationsInput, Prisma.ProgramUncheckedCreateWithoutDonationsInput>
  connectOrCreate?: Prisma.ProgramCreateOrConnectWithoutDonationsInput
  connect?: Prisma.ProgramWhereUniqueInput
}

export type ProgramUpdateOneRequiredWithoutDonationsNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramCreateWithoutDonationsInput, Prisma.ProgramUncheckedCreateWithoutDonationsInput>
  connectOrCreate?: Prisma.ProgramCreateOrConnectWithoutDonationsInput
  upsert?: Prisma.ProgramUpsertWithoutDonationsInput
  connect?: Prisma.ProgramWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProgramUpdateToOneWithWhereWithoutDonationsInput, Prisma.ProgramUpdateWithoutDonationsInput>, Prisma.ProgramUncheckedUpdateWithoutDonationsInput>
}

export type ProgramCreateNestedOneWithoutProgramPeriodsInput = {
  create?: Prisma.XOR<Prisma.ProgramCreateWithoutProgramPeriodsInput, Prisma.ProgramUncheckedCreateWithoutProgramPeriodsInput>
  connectOrCreate?: Prisma.ProgramCreateOrConnectWithoutProgramPeriodsInput
  connect?: Prisma.ProgramWhereUniqueInput
}

export type ProgramUpdateOneRequiredWithoutProgramPeriodsNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramCreateWithoutProgramPeriodsInput, Prisma.ProgramUncheckedCreateWithoutProgramPeriodsInput>
  connectOrCreate?: Prisma.ProgramCreateOrConnectWithoutProgramPeriodsInput
  upsert?: Prisma.ProgramUpsertWithoutProgramPeriodsInput
  connect?: Prisma.ProgramWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProgramUpdateToOneWithWhereWithoutProgramPeriodsInput, Prisma.ProgramUpdateWithoutProgramPeriodsInput>, Prisma.ProgramUncheckedUpdateWithoutProgramPeriodsInput>
}

export type ProgramCreateWithoutDonationsInput = {
  id?: string
  title: string
  description: string
  targetAmount: runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: string | null
  category?: string | null
  status?: string
  programType?: string
  contact?: string | null
  details?: string | null
  createdBy: string
  createdAt?: Date | string
  updatedAt?: Date | string
  programPeriods?: Prisma.ProgramPeriodCreateNestedManyWithoutProgramInput
}

export type ProgramUncheckedCreateWithoutDonationsInput = {
  id?: string
  title: string
  description: string
  targetAmount: runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: string | null
  category?: string | null
  status?: string
  programType?: string
  contact?: string | null
  details?: string | null
  createdBy: string
  createdAt?: Date | string
  updatedAt?: Date | string
  programPeriods?: Prisma.ProgramPeriodUncheckedCreateNestedManyWithoutProgramInput
}

export type ProgramCreateOrConnectWithoutDonationsInput = {
  where: Prisma.ProgramWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramCreateWithoutDonationsInput, Prisma.ProgramUncheckedCreateWithoutDonationsInput>
}

export type ProgramUpsertWithoutDonationsInput = {
  update: Prisma.XOR<Prisma.ProgramUpdateWithoutDonationsInput, Prisma.ProgramUncheckedUpdateWithoutDonationsInput>
  create: Prisma.XOR<Prisma.ProgramCreateWithoutDonationsInput, Prisma.ProgramUncheckedCreateWithoutDonationsInput>
  where?: Prisma.ProgramWhereInput
}

export type ProgramUpdateToOneWithWhereWithoutDonationsInput = {
  where?: Prisma.ProgramWhereInput
  data: Prisma.XOR<Prisma.ProgramUpdateWithoutDonationsInput, Prisma.ProgramUncheckedUpdateWithoutDonationsInput>
}

export type ProgramUpdateWithoutDonationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  targetAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  programType?: Prisma.StringFieldUpdateOperationsInput | string
  contact?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  details?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programPeriods?: Prisma.ProgramPeriodUpdateManyWithoutProgramNestedInput
}

export type ProgramUncheckedUpdateWithoutDonationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  targetAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  programType?: Prisma.StringFieldUpdateOperationsInput | string
  contact?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  details?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programPeriods?: Prisma.ProgramPeriodUncheckedUpdateManyWithoutProgramNestedInput
}

export type ProgramCreateWithoutProgramPeriodsInput = {
  id?: string
  title: string
  description: string
  targetAmount: runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: string | null
  category?: string | null
  status?: string
  programType?: string
  contact?: string | null
  details?: string | null
  createdBy: string
  createdAt?: Date | string
  updatedAt?: Date | string
  donations?: Prisma.DonationCreateNestedManyWithoutProgramInput
}

export type ProgramUncheckedCreateWithoutProgramPeriodsInput = {
  id?: string
  title: string
  description: string
  targetAmount: runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: string | null
  category?: string | null
  status?: string
  programType?: string
  contact?: string | null
  details?: string | null
  createdBy: string
  createdAt?: Date | string
  updatedAt?: Date | string
  donations?: Prisma.DonationUncheckedCreateNestedManyWithoutProgramInput
}

export type ProgramCreateOrConnectWithoutProgramPeriodsInput = {
  where: Prisma.ProgramWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramCreateWithoutProgramPeriodsInput, Prisma.ProgramUncheckedCreateWithoutProgramPeriodsInput>
}

export type ProgramUpsertWithoutProgramPeriodsInput = {
  update: Prisma.XOR<Prisma.ProgramUpdateWithoutProgramPeriodsInput, Prisma.ProgramUncheckedUpdateWithoutProgramPeriodsInput>
  create: Prisma.XOR<Prisma.ProgramCreateWithoutProgramPeriodsInput, Prisma.ProgramUncheckedCreateWithoutProgramPeriodsInput>
  where?: Prisma.ProgramWhereInput
}

export type ProgramUpdateToOneWithWhereWithoutProgramPeriodsInput = {
  where?: Prisma.ProgramWhereInput
  data: Prisma.XOR<Prisma.ProgramUpdateWithoutProgramPeriodsInput, Prisma.ProgramUncheckedUpdateWithoutProgramPeriodsInput>
}

export type ProgramUpdateWithoutProgramPeriodsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  targetAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  programType?: Prisma.StringFieldUpdateOperationsInput | string
  contact?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  details?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  donations?: Prisma.DonationUpdateManyWithoutProgramNestedInput
}

export type ProgramUncheckedUpdateWithoutProgramPeriodsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  targetAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  bannerImage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  programType?: Prisma.StringFieldUpdateOperationsInput | string
  contact?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  details?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdBy?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  donations?: Prisma.DonationUncheckedUpdateManyWithoutProgramNestedInput
}


/**
 * Count Type ProgramCountOutputType
 */

export type ProgramCountOutputType = {
  programPeriods: number
  donations: number
}

export type ProgramCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  programPeriods?: boolean | ProgramCountOutputTypeCountProgramPeriodsArgs
  donations?: boolean | ProgramCountOutputTypeCountDonationsArgs
}

/**
 * ProgramCountOutputType without action
 */
export type ProgramCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramCountOutputType
   */
  select?: Prisma.ProgramCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ProgramCountOutputType without action
 */
export type ProgramCountOutputTypeCountProgramPeriodsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramPeriodWhereInput
}

/**
 * ProgramCountOutputType without action
 */
export type ProgramCountOutputTypeCountDonationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DonationWhereInput
}


export type ProgramSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  targetAmount?: boolean
  bannerImage?: boolean
  category?: boolean
  status?: boolean
  programType?: boolean
  contact?: boolean
  details?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  programPeriods?: boolean | Prisma.Program$programPeriodsArgs<ExtArgs>
  donations?: boolean | Prisma.Program$donationsArgs<ExtArgs>
  _count?: boolean | Prisma.ProgramCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["program"]>

export type ProgramSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  targetAmount?: boolean
  bannerImage?: boolean
  category?: boolean
  status?: boolean
  programType?: boolean
  contact?: boolean
  details?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["program"]>

export type ProgramSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  targetAmount?: boolean
  bannerImage?: boolean
  category?: boolean
  status?: boolean
  programType?: boolean
  contact?: boolean
  details?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["program"]>

export type ProgramSelectScalar = {
  id?: boolean
  title?: boolean
  description?: boolean
  targetAmount?: boolean
  bannerImage?: boolean
  category?: boolean
  status?: boolean
  programType?: boolean
  contact?: boolean
  details?: boolean
  createdBy?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ProgramOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "description" | "targetAmount" | "bannerImage" | "category" | "status" | "programType" | "contact" | "details" | "createdBy" | "createdAt" | "updatedAt", ExtArgs["result"]["program"]>
export type ProgramInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  programPeriods?: boolean | Prisma.Program$programPeriodsArgs<ExtArgs>
  donations?: boolean | Prisma.Program$donationsArgs<ExtArgs>
  _count?: boolean | Prisma.ProgramCountOutputTypeDefaultArgs<ExtArgs>
}
export type ProgramIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ProgramIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ProgramPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Program"
  objects: {
    programPeriods: Prisma.$ProgramPeriodPayload<ExtArgs>[]
    donations: Prisma.$DonationPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    description: string
    targetAmount: runtime.Decimal
    bannerImage: string | null
    category: string | null
    status: string
    programType: string
    contact: string | null
    details: string | null
    createdBy: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["program"]>
  composites: {}
}

export type ProgramGetPayload<S extends boolean | null | undefined | ProgramDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProgramPayload, S>

export type ProgramCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProgramFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProgramCountAggregateInputType | true
  }

export interface ProgramDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Program'], meta: { name: 'Program' } }
  /**
   * Find zero or one Program that matches the filter.
   * @param {ProgramFindUniqueArgs} args - Arguments to find a Program
   * @example
   * // Get one Program
   * const program = await prisma.program.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProgramFindUniqueArgs>(args: Prisma.SelectSubset<T, ProgramFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Program that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProgramFindUniqueOrThrowArgs} args - Arguments to find a Program
   * @example
   * // Get one Program
   * const program = await prisma.program.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProgramFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProgramFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Program that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramFindFirstArgs} args - Arguments to find a Program
   * @example
   * // Get one Program
   * const program = await prisma.program.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProgramFindFirstArgs>(args?: Prisma.SelectSubset<T, ProgramFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Program that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramFindFirstOrThrowArgs} args - Arguments to find a Program
   * @example
   * // Get one Program
   * const program = await prisma.program.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProgramFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProgramFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Programs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Programs
   * const programs = await prisma.program.findMany()
   * 
   * // Get first 10 Programs
   * const programs = await prisma.program.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const programWithIdOnly = await prisma.program.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProgramFindManyArgs>(args?: Prisma.SelectSubset<T, ProgramFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Program.
   * @param {ProgramCreateArgs} args - Arguments to create a Program.
   * @example
   * // Create one Program
   * const Program = await prisma.program.create({
   *   data: {
   *     // ... data to create a Program
   *   }
   * })
   * 
   */
  create<T extends ProgramCreateArgs>(args: Prisma.SelectSubset<T, ProgramCreateArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Programs.
   * @param {ProgramCreateManyArgs} args - Arguments to create many Programs.
   * @example
   * // Create many Programs
   * const program = await prisma.program.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProgramCreateManyArgs>(args?: Prisma.SelectSubset<T, ProgramCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Programs and returns the data saved in the database.
   * @param {ProgramCreateManyAndReturnArgs} args - Arguments to create many Programs.
   * @example
   * // Create many Programs
   * const program = await prisma.program.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Programs and only return the `id`
   * const programWithIdOnly = await prisma.program.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProgramCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProgramCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Program.
   * @param {ProgramDeleteArgs} args - Arguments to delete one Program.
   * @example
   * // Delete one Program
   * const Program = await prisma.program.delete({
   *   where: {
   *     // ... filter to delete one Program
   *   }
   * })
   * 
   */
  delete<T extends ProgramDeleteArgs>(args: Prisma.SelectSubset<T, ProgramDeleteArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Program.
   * @param {ProgramUpdateArgs} args - Arguments to update one Program.
   * @example
   * // Update one Program
   * const program = await prisma.program.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProgramUpdateArgs>(args: Prisma.SelectSubset<T, ProgramUpdateArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Programs.
   * @param {ProgramDeleteManyArgs} args - Arguments to filter Programs to delete.
   * @example
   * // Delete a few Programs
   * const { count } = await prisma.program.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProgramDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProgramDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Programs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Programs
   * const program = await prisma.program.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProgramUpdateManyArgs>(args: Prisma.SelectSubset<T, ProgramUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Programs and returns the data updated in the database.
   * @param {ProgramUpdateManyAndReturnArgs} args - Arguments to update many Programs.
   * @example
   * // Update many Programs
   * const program = await prisma.program.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Programs and only return the `id`
   * const programWithIdOnly = await prisma.program.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProgramUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProgramUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Program.
   * @param {ProgramUpsertArgs} args - Arguments to update or create a Program.
   * @example
   * // Update or create a Program
   * const program = await prisma.program.upsert({
   *   create: {
   *     // ... data to create a Program
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Program we want to update
   *   }
   * })
   */
  upsert<T extends ProgramUpsertArgs>(args: Prisma.SelectSubset<T, ProgramUpsertArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Programs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramCountArgs} args - Arguments to filter Programs to count.
   * @example
   * // Count the number of Programs
   * const count = await prisma.program.count({
   *   where: {
   *     // ... the filter for the Programs we want to count
   *   }
   * })
  **/
  count<T extends ProgramCountArgs>(
    args?: Prisma.Subset<T, ProgramCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProgramCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Program.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProgramAggregateArgs>(args: Prisma.Subset<T, ProgramAggregateArgs>): Prisma.PrismaPromise<GetProgramAggregateType<T>>

  /**
   * Group by Program.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProgramGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProgramGroupByArgs['orderBy'] }
      : { orderBy?: ProgramGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProgramGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Program model
 */
readonly fields: ProgramFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Program.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProgramClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  programPeriods<T extends Prisma.Program$programPeriodsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Program$programPeriodsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  donations<T extends Prisma.Program$donationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Program$donationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Program model
 */
export interface ProgramFieldRefs {
  readonly id: Prisma.FieldRef<"Program", 'String'>
  readonly title: Prisma.FieldRef<"Program", 'String'>
  readonly description: Prisma.FieldRef<"Program", 'String'>
  readonly targetAmount: Prisma.FieldRef<"Program", 'Decimal'>
  readonly bannerImage: Prisma.FieldRef<"Program", 'String'>
  readonly category: Prisma.FieldRef<"Program", 'String'>
  readonly status: Prisma.FieldRef<"Program", 'String'>
  readonly programType: Prisma.FieldRef<"Program", 'String'>
  readonly contact: Prisma.FieldRef<"Program", 'String'>
  readonly details: Prisma.FieldRef<"Program", 'String'>
  readonly createdBy: Prisma.FieldRef<"Program", 'String'>
  readonly createdAt: Prisma.FieldRef<"Program", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Program", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Program findUnique
 */
export type ProgramFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * Filter, which Program to fetch.
   */
  where: Prisma.ProgramWhereUniqueInput
}

/**
 * Program findUniqueOrThrow
 */
export type ProgramFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * Filter, which Program to fetch.
   */
  where: Prisma.ProgramWhereUniqueInput
}

/**
 * Program findFirst
 */
export type ProgramFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * Filter, which Program to fetch.
   */
  where?: Prisma.ProgramWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Programs to fetch.
   */
  orderBy?: Prisma.ProgramOrderByWithRelationInput | Prisma.ProgramOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Programs.
   */
  cursor?: Prisma.ProgramWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Programs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Programs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Programs.
   */
  distinct?: Prisma.ProgramScalarFieldEnum | Prisma.ProgramScalarFieldEnum[]
}

/**
 * Program findFirstOrThrow
 */
export type ProgramFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * Filter, which Program to fetch.
   */
  where?: Prisma.ProgramWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Programs to fetch.
   */
  orderBy?: Prisma.ProgramOrderByWithRelationInput | Prisma.ProgramOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Programs.
   */
  cursor?: Prisma.ProgramWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Programs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Programs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Programs.
   */
  distinct?: Prisma.ProgramScalarFieldEnum | Prisma.ProgramScalarFieldEnum[]
}

/**
 * Program findMany
 */
export type ProgramFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * Filter, which Programs to fetch.
   */
  where?: Prisma.ProgramWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Programs to fetch.
   */
  orderBy?: Prisma.ProgramOrderByWithRelationInput | Prisma.ProgramOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Programs.
   */
  cursor?: Prisma.ProgramWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Programs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Programs.
   */
  skip?: number
  distinct?: Prisma.ProgramScalarFieldEnum | Prisma.ProgramScalarFieldEnum[]
}

/**
 * Program create
 */
export type ProgramCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * The data needed to create a Program.
   */
  data: Prisma.XOR<Prisma.ProgramCreateInput, Prisma.ProgramUncheckedCreateInput>
}

/**
 * Program createMany
 */
export type ProgramCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Programs.
   */
  data: Prisma.ProgramCreateManyInput | Prisma.ProgramCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Program createManyAndReturn
 */
export type ProgramCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * The data used to create many Programs.
   */
  data: Prisma.ProgramCreateManyInput | Prisma.ProgramCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Program update
 */
export type ProgramUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * The data needed to update a Program.
   */
  data: Prisma.XOR<Prisma.ProgramUpdateInput, Prisma.ProgramUncheckedUpdateInput>
  /**
   * Choose, which Program to update.
   */
  where: Prisma.ProgramWhereUniqueInput
}

/**
 * Program updateMany
 */
export type ProgramUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Programs.
   */
  data: Prisma.XOR<Prisma.ProgramUpdateManyMutationInput, Prisma.ProgramUncheckedUpdateManyInput>
  /**
   * Filter which Programs to update
   */
  where?: Prisma.ProgramWhereInput
  /**
   * Limit how many Programs to update.
   */
  limit?: number
}

/**
 * Program updateManyAndReturn
 */
export type ProgramUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * The data used to update Programs.
   */
  data: Prisma.XOR<Prisma.ProgramUpdateManyMutationInput, Prisma.ProgramUncheckedUpdateManyInput>
  /**
   * Filter which Programs to update
   */
  where?: Prisma.ProgramWhereInput
  /**
   * Limit how many Programs to update.
   */
  limit?: number
}

/**
 * Program upsert
 */
export type ProgramUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * The filter to search for the Program to update in case it exists.
   */
  where: Prisma.ProgramWhereUniqueInput
  /**
   * In case the Program found by the `where` argument doesn't exist, create a new Program with this data.
   */
  create: Prisma.XOR<Prisma.ProgramCreateInput, Prisma.ProgramUncheckedCreateInput>
  /**
   * In case the Program was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProgramUpdateInput, Prisma.ProgramUncheckedUpdateInput>
}

/**
 * Program delete
 */
export type ProgramDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  /**
   * Filter which Program to delete.
   */
  where: Prisma.ProgramWhereUniqueInput
}

/**
 * Program deleteMany
 */
export type ProgramDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Programs to delete
   */
  where?: Prisma.ProgramWhereInput
  /**
   * Limit how many Programs to delete.
   */
  limit?: number
}

/**
 * Program.programPeriods
 */
export type Program$programPeriodsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  where?: Prisma.ProgramPeriodWhereInput
  orderBy?: Prisma.ProgramPeriodOrderByWithRelationInput | Prisma.ProgramPeriodOrderByWithRelationInput[]
  cursor?: Prisma.ProgramPeriodWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProgramPeriodScalarFieldEnum | Prisma.ProgramPeriodScalarFieldEnum[]
}

/**
 * Program.donations
 */
export type Program$donationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Donation
   */
  select?: Prisma.DonationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Donation
   */
  omit?: Prisma.DonationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DonationInclude<ExtArgs> | null
  where?: Prisma.DonationWhereInput
  orderBy?: Prisma.DonationOrderByWithRelationInput | Prisma.DonationOrderByWithRelationInput[]
  cursor?: Prisma.DonationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.DonationScalarFieldEnum | Prisma.DonationScalarFieldEnum[]
}

/**
 * Program without action
 */
export type ProgramDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
}
